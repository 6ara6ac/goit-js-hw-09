{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAe,SAIzC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACJF,EAAS,CAACH,WAAUC,UAEpBG,EAAQ,CAACJ,WAAUC,S,GACjBA,E,IAXNL,EAASa,iBAAkB,UAiB3B,SAAuBC,GACrBA,EAAMC,iBAQN,IANC,IAAMC,EAAS,CACdC,QAASC,OAAOlB,EAASK,MAAMc,OAC/BC,OAAQF,OAAOlB,EAASqB,KAAKF,OAC7BG,SAAUJ,OAAOlB,EAASuB,OAAOJ,QAG1BK,EAAW,EAAGA,GAAYR,EAAOM,SAAUE,IAAW,CAE/DrB,EAAcqB,EADAR,EAAOC,QAAUD,EAAOI,QAAUI,EAAW,IAE1DC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formData = document.querySelector ('.form');\nformData.addEventListener ('submit', onSubmitClick)\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(()=>{ \n    if (shouldResolve) {\n    resolve ({position, delay})\n  } else {\n    reject ({position, delay})\n  }}, delay)\n})\n};\n\n\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n\n   const formEL = {\n    delayEl: Number(formData.delay.value),\n    stepEl: Number(formData.step.value),\n    amountEl: Number(formData.amount.value)\n  }\n  \n  for (let position = 1; position <= formEL.amountEl; position++){\n  const delay = formEL.delayEl + formEL.stepEl * (position - 1);\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formData","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","formEL","delayEl","Number","value","stepEl","step","amountEl","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.8025da23.js.map"}